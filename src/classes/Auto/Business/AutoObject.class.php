<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.0.10.99 at 2013-02-11 12:04:18                     *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoObject extends i18n
	{
		protected $created = null;
		protected $published = null;
		protected $type = null;
		protected $typeId = null;
		protected $offer = null;
		protected $offerId = null;
		protected $agent = null;
		protected $agentId = null;
		protected $owner = null;
		protected $ownerId = null;
		
		/**
		 * @return Timestamp
		**/
		public function getCreated()
		{
			return $this->created;
		}
		
		/**
		 * @return Object
		**/
		public function setCreated(Timestamp $created)
		{
			$this->created = $created;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropCreated()
		{
			$this->created = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getPublished()
		{
			return $this->published;
		}
		
		/**
		 * @return Object
		**/
		public function setPublished(Timestamp $published = null)
		{
			$this->published = $published;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropPublished()
		{
			$this->published = null;
			
			return $this;
		}
		
		/**
		 * @return PropertyType
		**/
		public function getType()
		{
			if (!$this->type && $this->typeId) {
				$this->type = PropertyType::dao()->getById($this->typeId);
			}
			
			return $this->type;
		}
		
		public function getTypeId()
		{
			return $this->type
				? $this->type->getId()
				: $this->typeId;
		}
		
		/**
		 * @return Object
		**/
		public function setType(PropertyType $type)
		{
			$this->type = $type;
			$this->typeId = $type ? $type->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function setTypeId($id)
		{
			$this->type = null;
			$this->typeId = $id;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropType()
		{
			$this->type = null;
			$this->typeId = null;
			
			return $this;
		}
		
		/**
		 * @return OfferType
		**/
		public function getOffer()
		{
			if (!$this->offer && $this->offerId) {
				$this->offer = OfferType::dao()->getById($this->offerId);
			}
			
			return $this->offer;
		}
		
		public function getOfferId()
		{
			return $this->offer
				? $this->offer->getId()
				: $this->offerId;
		}
		
		/**
		 * @return Object
		**/
		public function setOffer(OfferType $offer)
		{
			$this->offer = $offer;
			$this->offerId = $offer ? $offer->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function setOfferId($id)
		{
			$this->offer = null;
			$this->offerId = $id;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropOffer()
		{
			$this->offer = null;
			$this->offerId = null;
			
			return $this;
		}
		
		/**
		 * @return Agent
		**/
		public function getAgent()
		{
			if (!$this->agent && $this->agentId) {
				$this->agent = Agent::dao()->getById($this->agentId);
			}
			
			return $this->agent;
		}
		
		public function getAgentId()
		{
			return $this->agent
				? $this->agent->getId()
				: $this->agentId;
		}
		
		/**
		 * @return Object
		**/
		public function setAgent(Agent $agent = null)
		{
			$this->agent = $agent;
			$this->agentId = $agent ? $agent->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function setAgentId($id = null)
		{
			$this->agent = null;
			$this->agentId = $id;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropAgent()
		{
			$this->agent = null;
			$this->agentId = null;
			
			return $this;
		}
		
		/**
		 * @return Owner
		**/
		public function getOwner()
		{
			if (!$this->owner && $this->ownerId) {
				$this->owner = Owner::dao()->getById($this->ownerId);
			}
			
			return $this->owner;
		}
		
		public function getOwnerId()
		{
			return $this->owner
				? $this->owner->getId()
				: $this->ownerId;
		}
		
		/**
		 * @return Object
		**/
		public function setOwner(Owner $owner = null)
		{
			$this->owner = $owner;
			$this->ownerId = $owner ? $owner->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function setOwnerId($id = null)
		{
			$this->owner = null;
			$this->ownerId = $id;
			
			return $this;
		}
		
		/**
		 * @return Object
		**/
		public function dropOwner()
		{
			$this->owner = null;
			$this->ownerId = null;
			
			return $this;
		}
	}
?>