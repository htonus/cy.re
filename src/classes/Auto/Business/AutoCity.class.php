<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2013-10-17 09:51:57                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoCity extends i18n
	{
		protected $i18n = null;
		protected $latitude = null;
		protected $longitude = null;
		protected $country = null;
		protected $countryId = null;
		protected $region = null;
		protected $regionId = null;
		protected $prefix = null;
		
		/**
		 * @return CityI18nDAO
		**/
		public function getI18n($lazy = false)
		{
			if (!$this->i18n || ($this->i18n->isLazy() != $lazy)) {
				$this->i18n = new CityI18nDAO($this, $lazy);
			}
			
			return $this->i18n;
		}
		
		/**
		 * @return City
		**/
		public function fillI18n($collection, $lazy = false)
		{
			$this->i18n = new CityI18nDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->i18n->mergeList($collection);
			
			return $this;
		}
		
		public function getLatitude()
		{
			return $this->latitude;
		}
		
		/**
		 * @return City
		**/
		public function setLatitude($latitude)
		{
			$this->latitude = $latitude;
			
			return $this;
		}
		
		public function getLongitude()
		{
			return $this->longitude;
		}
		
		/**
		 * @return City
		**/
		public function setLongitude($longitude)
		{
			$this->longitude = $longitude;
			
			return $this;
		}
		
		/**
		 * @return Country
		**/
		public function getCountry()
		{
			if (!$this->country && $this->countryId) {
				$this->country = Country::dao()->getById($this->countryId);
			}
			
			return $this->country;
		}
		
		public function getCountryId()
		{
			return $this->country
				? $this->country->getId()
				: $this->countryId;
		}
		
		/**
		 * @return City
		**/
		public function setCountry(Country $country)
		{
			$this->country = $country;
			$this->countryId = $country ? $country->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return City
		**/
		public function setCountryId($id)
		{
			$this->country = null;
			$this->countryId = $id;
			
			return $this;
		}
		
		/**
		 * @return City
		**/
		public function dropCountry()
		{
			$this->country = null;
			$this->countryId = null;
			
			return $this;
		}
		
		/**
		 * @return City
		**/
		public function getRegion()
		{
			if (!$this->region && $this->regionId) {
				$this->region = City::dao()->getById($this->regionId);
			}
			
			return $this->region;
		}
		
		public function getRegionId()
		{
			return $this->region
				? $this->region->getId()
				: $this->regionId;
		}
		
		/**
		 * @return City
		**/
		public function setRegion(City $region = null)
		{
			$this->region = $region;
			$this->regionId = $region ? $region->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return City
		**/
		public function setRegionId($id = null)
		{
			$this->region = null;
			$this->regionId = $id;
			
			return $this;
		}
		
		/**
		 * @return City
		**/
		public function dropRegion()
		{
			$this->region = null;
			$this->regionId = null;
			
			return $this;
		}
		
		public function getPrefix()
		{
			return $this->prefix;
		}
		
		/**
		 * @return City
		**/
		public function setPrefix($prefix)
		{
			$this->prefix = $prefix;
			
			return $this;
		}
	}
?>