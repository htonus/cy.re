<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2013-10-24 12:58:41                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoPicture extends IdentifiableObject
	{
		protected $name = null;
		protected $order = null;
		protected $type = null;
		protected $typeId = null;
		protected $main = false;
		protected $size = 0;
		protected $width = null;
		protected $height = null;
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return Picture
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		public function getOrder()
		{
			return $this->order;
		}
		
		/**
		 * @return Picture
		**/
		public function setOrder($order)
		{
			$this->order = $order;
			
			return $this;
		}
		
		/**
		 * @return ImageType
		**/
		public function getType()
		{
			if (!$this->type && $this->typeId) {
				$this->type = new ImageType($this->typeId);
			}
			
			return $this->type;
		}
		
		public function getTypeId()
		{
			return $this->type
				? $this->type->getId()
				: $this->typeId;
		}
		
		/**
		 * @return Picture
		**/
		public function setType(ImageType $type)
		{
			$this->type = $type;
			$this->typeId = $type ? $type->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Picture
		**/
		public function setTypeId($id)
		{
			$this->type = null;
			$this->typeId = $id;
			
			return $this;
		}
		
		/**
		 * @return Picture
		**/
		public function dropType()
		{
			$this->type = null;
			$this->typeId = null;
			
			return $this;
		}
		
		public function getMain()
		{
			return $this->main;
		}
		
		public function isMain()
		{
			return $this->main;
		}
		
		/**
		 * @return Picture
		**/
		public function setMain($main = null)
		{
			Assert::isTernaryBase($main);
			
			$this->main = $main;
			
			return $this;
		}
		
		public function getSize()
		{
			return $this->size;
		}
		
		/**
		 * @return Picture
		**/
		public function setSize($size)
		{
			$this->size = $size;
			
			return $this;
		}
		
		public function getWidth()
		{
			return $this->width;
		}
		
		/**
		 * @return Picture
		**/
		public function setWidth($width)
		{
			$this->width = $width;
			
			return $this;
		}
		
		public function getHeight()
		{
			return $this->height;
		}
		
		/**
		 * @return Picture
		**/
		public function setHeight($height)
		{
			$this->height = $height;
			
			return $this;
		}
	}
?>